from src.Models.{{ entity.nameEntity }}Entity import {{ entity.nameEntity }}Entity
from faker import Faker

class {{ entity.nameEntity }}Mock:
    fake = Faker()
    fake.seed(0)
    {%- for step_var in ['DEFAULT', 'UPDATE'] %}
    {{ entity.nameEntity | upper }}_ENTITY_{{ entity.getPrimaryKey().nameColumn | upper }}_{{ step_var }}= fake.pyint()
    {% for column in entity.columns %}
    {{ entity.nameEntity | upper }}_ENTITY_{{ column.nameColumn | upper }}_{{ step_var }}=
    {%- if column.typeData == 'String' -%}
        fake.word()
    {%- elif column.typeData == 'Integer' -%}
        fake.pyint()
    {%- elif column.typeData == 'Numeric' -%}
        fake.pydecimal()
    {%- elif column.typeData == 'Float' -%}
        fake.pyfloat()
    {%- elif column.typeData == 'DateTime' -%}
        fake.date_time()
    {%- elif column.typeData == 'Boolean' -%}
        fake.pybool()
    {%- endif %}
    {%- endfor %}
    {%- endfor %}

    def createEntityWithoutRelationship(self):
        {{ entity.nameEntity | lower }}Entity = {{ entity.nameEntity }}Entity()
        {{ entity.nameEntity | lower }}Entity.{{ entity.getPrimaryKey().nameColumn }} = self.{{ entity.nameEntity | upper }}_ENTITY_{{ entity.getPrimaryKey().nameColumn | upper }}_DEFAULT
        {%- for column in entity.columns %}
        {{ entity.nameEntity | lower }}Entity.{{ column.nameColumn }} = self.{{ entity.nameEntity | upper }}_ENTITY_{{ column.nameColumn | upper }}_DEFAULT
        {%- endfor %}
        return {{ entity.nameEntity | lower }}Entity

    def createEntityWithRelationship(self):
        {%- for relationship in entity.relationships -%}    
        {%- if relationship.isOneToOne %}
            {%- if relationship.entity1 == entity %}
        from .{{ relationship.entity2.nameEntity }}Mock import {{ relationship.entity2.nameEntity }}Mock
                {%- else %}
        from .{{ relationship.entity1.nameEntity }}Mock import {{ relationship.entity1.nameEntity }}Mock
                {%- endif %}
            {%- elif relationship.isManyToOne %}
                {%- if relationship.entity1 == entity %}
        from .{{ relationship.entity2.nameEntity }}Mock import {{ relationship.entity2.nameEntity }}Mock
                {% else %}
        from .{{ relationship.entity1.nameEntity }}Mock import {{ relationship.entity1.nameEntity }}Mock
                {%- endif %}
            {%- elif relationship.isOneToMany %}
                {%- if relationship.entity1 == entity %}
        from .{{ relationship.entity2.nameEntity }}Mock import {{ relationship.entity2.nameEntity }}Mock
                {%- else %}
        from .{{ relationship.entity1.nameEntity }}Mock import {{ relationship.entity1.nameEntity }}Mock
                {%- endif %}
            {%- else %}
                {%- if relationship.entity1 == entity %}
        from .{{ relationship.entity2.nameEntity }}Mock import {{ relationship.entity2.nameEntity }}Mock
                {%- else %}
        from .{{ relationship.entity1.nameEntity }}Mock import {{ relationship.entity1.nameEntity }}Mock
                {%- endif %}
            {%- endif %}
        {%- endfor %}
        entity = self.createEntityWithoutRelationship()
        {%- for relationship in entity.relationships -%}    
        {%- if relationship.isOneToOne %}
        {%- if relationship.entity1 == entity %}
        {{ relationship.entity2.nameEntity | lower }}Mock = {{ relationship.entity2.nameEntity }}Mock()
        entity.{{ relationship.entity2.nameEntity | lower }} = {{ relationship.entity2.nameEntity | lower }}Mock.createEntityWithoutRelationship()
        {%- else %}
        entity.{{ relationship.entity1.nameEntity | lower }}_{{ relationship.entity1.getPrimaryKey().nameColumn }} = self.fake.pyint()
        {%- endif %}
        {%- elif relationship.isManyToOne %}
        {%- if relationship.entity1 == entity %}
        entity.{{ relationship.entity2.nameEntity | lower }}_{{ relationship.entity2.getPrimaryKey().nameColumn }} = self.fake.pyint()
        {% else %}
        {{ relationship.entity1.nameEntity | lower }}Mock = {{ relationship.entity1.nameEntity }}Mock()
        entity.{{ relationship.entity1.nameEntity | lower }} = [{{ relationship.entity1.nameEntity | lower }}Mock.createEntityWithoutRelationship()]
        {%- endif %}
        {%- elif relationship.isOneToMany %}
        {%- if relationship.entity1 == entity %}
        {{ relationship.entity2.nameEntity | lower }}Mock = {{ relationship.entity2.nameEntity }}Mock()
        entity.{{ relationship.entity2.nameEntity | lower }} = [{{ relationship.entity2.nameEntity | lower }}Mock.createEntityWithoutRelationship()]
        {%- else %}
        entity.{{ relationship.entity1.nameEntity | lower }}_{{ relationship.entity1.getPrimaryKey().nameColumn }} = self.fake.pyint()
        {%- endif %}
        {%- else %}
        {%- if relationship.entity1 == entity %}
        {{ relationship.entity2.nameEntity | lower }}Mock = {{ relationship.entity2.nameEntity }}Mock()
        entity.{{ relationship.entity2.nameEntity | lower }} = [{{ relationship.entity2.nameEntity | lower }}Mock.createEntityWithoutRelationship()]
        {%- else %}
        {{ relationship.entity1.nameEntity | lower }}Mock = {{ relationship.entity1.nameEntity }}Mock()
        entity.{{ relationship.entity1.nameEntity | lower }} = [{{ relationship.entity1.nameEntity | lower}}Mock.createEntityWithoutRelationship()]
        {%- endif -%}
        {%- endif -%}
        {%- endfor %}

        return entity